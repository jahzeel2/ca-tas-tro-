@model GeoSit.Client.Web.Models.FormularioUModel
@using GeoSit.Web.Api.Models;
@{
    string imgSrc = "#";
    if (!string.IsNullOrEmpty(Model.CroquisBase64))
    {
        imgSrc = Model.CroquisBase64;
    }
    else if (Model.DDJJU.Croquis != null)
    {
        imgSrc = String.Format("data:image/png;base64,{0}", Convert.ToBase64String(Model.DDJJU.Croquis));
    }
}

<style>
    #Rubro2 .checkbox > input {
        margin-left: 15px;
    }
</style>

<div id="urlActionGetClases" data-request-url="@Url.Action("GetClasesParcelas", "DeclaracionesJuradas")"></div>

<div id="Rubro2" class="panel remove-margin remove-shadow">
    <div class="col-xs-12 remove-padding rubro2-scroll-content">
        <div class="col-xs-12 remove-padding">
            <div class="panel-title">
                <h4 class="title-border"><strong>Rubro 1</strong></h4>
            </div>
            <div class="panel-body">
                <div class="row" style="margin: 0;margin-left: 15px;">
                    <h5><strong>Inc. E</strong></h5>
                </div>
                <div class="form-horizontal" style="margin-bottom:20px;">
                    <div class="form-group">
                        <label class="col-xs-5 control-label text-right">Superficie M<sup>2</sup> plano</label>
                        <div class="col-xs-4">
                            @Html.TextBoxFor(x => x.DDJJU.SuperficiePlano, "{0:0.00}", new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-xs-5 control-label text-right">Superficie M<sup>2</sup> t&iacute;tulo</label>
                        <div class="col-xs-4">
                            @Html.TextBoxFor(x => x.DDJJU.SuperficieTitulo, "{0:0.00}", new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="row" style="margin: 0;margin-left: 15px;">
                    <h5><strong>Inc. F</strong></h5>
                </div>
                <div class="form-horizontal">
                    @Html.Hidden("uOtrasCarJSON", @Html.Raw(Json.Encode(@Model.UOtrasCar)))

                    @Html.HiddenFor(x => x.DDJJU.AguaCorriente)
                    @Html.HiddenFor(x => x.DDJJU.Cloaca)

                    @if (Model.UOtrasCar.Any(x => x.OtrasCarRequerida.ToLower().Equals("agua corriente")))
                    {
                        <div class="form-group">
                            <label class="col-xs-5 control-label text-right">Agua corriente</label>
                            <div class="checkbox">
                                <input type="checkbox" id="AguaCorriente" @(Model.DDJJU.AguaCorriente.GetValueOrDefault() == 1 ? "checked" : "")>
                            </div>
                        </div>
                    }

                    @if (Model.UOtrasCar.Any(x => x.OtrasCarRequerida.ToLower().Equals("cloacas")))
                    {
                        <div class="form-group">
                            <label class="col-xs-5 control-label text-right">Cloacas</label>
                            <div class="checkbox">
                                <input type="checkbox" id="Cloaca" @(Model.DDJJU.Cloaca.GetValueOrDefault() == 1 ? "checked" : "")>
                            </div>
                        </div>
                    }


                    @if (Model.UOtrasCar.Any(x => x.OtrasCarRequerida.ToLower().Equals("cloacas")))
                    {
                        <div class="form-group">
                            <label class="col-xs-5 control-label text-right">N° de habitantes</label>
                            <div class="col-xs-4">
                                @Html.TextBoxFor(x => x.DDJJU.NumeroHabitantes, new { @class = "form-control" })
                            </div>
                        </div>
                    }
                    else
                    {
                        @Html.HiddenFor(x => x.DDJJU.NumeroHabitantes)
                    }
                </div>
            </div>
        </div>
        <div class="panel-title">
            <h4 class="title-border"><strong>Rubro 2</strong></h4>
        </div>
        <div class="panel-body">
            <div class="row" style="margin: 0;margin-left: 15px;">
                <h5><strong>Croquis de la parcela</strong></h5>
            </div>
            <div class="form-horizontal" style="margin-bottom:20px;">
                <div class="form-group">
                    <div class="col-xs-3 col-xs-offset-3">
                        @Html.HiddenFor(x => x.DDJJU.Croquis)
                        @Html.HiddenFor(x => x.CroquisBase64)
                        @Html.HiddenFor(x => x.ClasesJsonSerialized)
                        <input type='file' id="file" name="file" accept=".png,.jpg,.jpeg" />
                    </div>
                    <div class="col-xs-3">
                        <input class="u-rubro2-borrar" type="button" value="Borrar" />
                    </div>

                    <div class="col-xs-12">
                        <img id="imageDisplay" src="@imgSrc" alt="" class="img-responsive" width="300" style="margin: 0 auto" />
                    </div>
                </div>
                <div class="form-group clearfix remove-margin">
                    <div class="col-xs-12 remove-padding" id="clase_div">
                        <h5 style="padding: 0 0 0 10px"><strong><u>Clases</u></strong></h5>
                        <div class="panel-body titular-datos">
                            <select id="cboClasesDisponibles" class="form-control">
                                <option value>- Seleccione -</option>
                                @if ((bool)ViewData["EsEdicion"])
                                {
                                    foreach (var item in Model.ClasesDisponiblesEdicion)
                                    {
                                        string selected = Model.ClasesSeleccionada != null
                                                          && Model.ClasesSeleccionada.Any()
                                                          && item.IdClaseParcela == Model.ClasesSeleccionada[0].IdClaseParcela
                                                             ? "selected"
                                                             : string.Empty;
                                        <option @selected value="@(item.IdClaseParcela)" class="item-clase item-clase@(item.IdClaseParcela)">@(item.IdClaseParcela) - @(item.Descripcion)</option>
                                    }
                                }
                                else
                                {
                                    foreach (var item in Model.ClasesDisponibles)
                                    {
                                        string selected = Model.ClasesSeleccionada != null
                                                          && Model.ClasesSeleccionada.Any()
                                                          && item.IdClaseParcela == Model.ClasesSeleccionada[0].IdClaseParcela
                                                             ? "selected"
                                                             : string.Empty;
                                        <option @selected value="@(item.IdClaseParcela)" class="item-clase item-clase@(item.IdClaseParcela)">@(item.Descripcion)</option>
                                    }

                                }

                            </select>
                        </div>
                    </div>
                    <div class="col-xs-6 remove-padding hidden" id="Croquis_div">
                        <h5 style="padding: 0 0 0 50px"><strong><u>Croquis</u></strong></h5>
                        <div class="panel-body titular-datos">
                            <img id="croquisClaseParcela" src="" class="img-responsive" width="150" style="margin: 0 auto; border:1px solid black;" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <label id="errorSuperficie"></label>
        <div class="col-xs-12">
            <h5><strong><u>Caracter&iacute;sticas</u></strong></h5>
            <div class="row">
                <div class="col-xs-12">
                    <div id="GrillaCaracteristicas" class="dataTables_wrapper form-inline dt-bootstrap no-footer">
                        <table id="medidas-lineales-table" class="table table-striped table-condensed table-bordered table-responsive dataTable no-footer">

                            <thead>
                                <tr role="row">
                                    <th class=""></th>
                                    <th class="sorting_asc">Medidas (m)</th>
                                    <th class="sorting_asc">Calle</th>
                                    <th class="sorting_asc">Desde</th>
                                    <th class="sorting_asc">Hasta</th>
                                    <th class="sorting_asc">Paridad</th>
                                    <th class="sorting_asc">Aforo</th>
                                    <th class="">&nbsp;</th>
                                </tr>
                            </thead>

                            <tbody>

                                @foreach (TipoMedidaLineal t in Model.TiposMedidaLineal)
                                {
                                    <tr id="tipoMedidaLineal@(t.IdTipoMedidaLineal)" class="tipoMedidaLineal" data-tml="@(t.IdTipoMedidaLineal)">
                                        <td>
                                            <span type="text" id="descripcion@(t.IdTipoMedidaLineal)">@t.Descripcion</span>
                                        </td>
                                        <td>
                                            <input type="text" id="metros@(t.IdTipoMedidaLineal)" class="metrosInput" data-tml="@(t.IdTipoMedidaLineal)" />
                                        </td>
                                        <td>
                                            <!--Calle-->
                                            <div id="calle@(t.IdTipoMedidaLineal)"></div>
                                        </td>
                                        <td>
                                            <!--Desde-->
                                            <div id="desde@(t.IdTipoMedidaLineal)"></div>
                                        </td>
                                        <td>
                                            <!--Hasta-->
                                            <div id="hasta@(t.IdTipoMedidaLineal)"></div>
                                        </td>
                                        <td>
                                            <!--Paridad-->
                                            <div id="paridad@(t.IdTipoMedidaLineal)"></div>
                                        </td>
                                        <td>
                                            <!--Aforo-->
                                            <input type="text" id="aforo@(t.IdTipoMedidaLineal)" class="aforoInput" data-tml="@(t.IdTipoMedidaLineal)" placeholder="0.00" />
                                        </td>
                                        <td>
                                            <!--Buscar Aforo-->
                                            <span id="buscarAforo@(t.IdTipoMedidaLineal)" data-edita="existente" class="fa fa-search fa-2x buscarAforo" data-tml="@(t.IdTipoMedidaLineal)"></span>
                                        </td>
                                    </tr>
                                }
                            </tbody>

                        </table>
                    </div>
                </div>

            </div>
        </div>

    </div>
</div>


<script>
    var clasesSeleccionadas = @Html.Raw(Json.Encode(@Model.ClasesSeleccionada)) || [];

    var clasesDisponibles = @Html.Raw(Json.Encode(@Model.ClasesDisponibles)) || [];
</script>
