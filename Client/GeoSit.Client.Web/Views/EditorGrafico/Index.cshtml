<link href="~/Content/dataTables.bootstrap.css" rel="stylesheet" />
<link href="~/Content/css/select2.css" rel="stylesheet" />
<link href="~/Content/select2-bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/editorGrafico.css" rel="stylesheet" />

<div class="modal fade theme_new editor-grafico" id="modal-window-editor-grafico" tabindex="-1" data-backdrop="static" role="dialog" aria-labelledby="modal-windowLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="scroll-content">
                <div class="modal-header">
                    <h3 class="modal-title col-xs-11">Administraci&oacute;n de Objetos Gr&aacute;ficos</h3>
                    <span aria-hidden="true" class="fa fa-close fa-2x white cursor-pointer pull-right" data-dismiss="modal" aria-label="Cerrar" title="Cerrar"></span>
                </div>
                <div class="modal-body">
                    <div class="col-xs-12 alfa-side">
                        <div class="body-content">
                            <div class="panel-group">
                                <div class="panel panel-default remove-shadow">
                                    <div class="panel-heading bg-primary main-heading" role="tab" id="headingListado">
                                        <a data-toggle="collapse" aria-expanded="true">
                                            <div class="panel-title">
                                                @RenderSection("Title")
                                            </div>
                                        </a>
                                    </div>
                                    <div class="panel-body panel-grilla">
                                        <div class="row grilla-container">
                                            <div class="col-xs-11">
                                                <table id="grilla-objetos" class="table table-striped table-bordered table-responsive">
                                                    <thead>
                                                        <tr>
                                                            @RenderSection("TableColumns", true)
                                                        </tr>
                                                        <tr class="filtros">
                                                            @RenderSection("TableFilters", true)
                                                        </tr>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                            </div>
                                            <div class="col-xs-1">
                                                <dl>
                                                    <dt><span class="fa fa-2x fa-plus-circle" aria-hidden="true" id="btnAgregarObjeto"></span></dt>
                                                    <dt><span class="fa fa-2x fa-minus-circle boton-deshabilitado" aria-hidden="true" id="btnEliminarObjeto"></span></dt>
                                                    <dt><span class="fa fa-2x fa-pencil boton-deshabilitado" aria-hidden="true" id="btnEditarObjeto"></span></dt>
                                                    <dt><span class="fa fa-2x fa-map-marker boton-deshabilitado" aria-hidden="true" id="btnMapa"></span></dt>
                                                </dl>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="panel panel-default remove-shadow">
                                    <div class="panel-heading bg-primary main-heading" role="tab" id="headingListado">
                                        <a data-toggle="collapse" aria-expanded="true">
                                            <div class="panel-title">
                                                @RenderSection("Detail")
                                            </div>
                                        </a>
                                    </div>
                                    <div class="panel-body panel-object-data">
                                        <div class="row">
                                            <div class="col-xs-12">
                                                @RenderSection("ObjectData", true)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-6 hidden map-side">
                        <div class="panel panel-default remove-shadow">
                            <div class='panel-heading bg-primary main-heading'>
                                <a href="javascript:void(0)">
                                    <div class='panel-title'>
                                        Mapa
                                        <div class="col-xs-3 pull-right text-right remove-padding">
                                            <span class="fa fa-lg fa-copy" style="margin-right:15px;" id="btnCopiarCoords"></span>
                                            <span class="fa fa-lg fa-check" style="margin-right:15px;" id="btnAplicarCoords"></span>
                                            <span class="fa fa-times fa-lg" id="btnCerrarMapa"></span>
                                        </div>
                                    </div>
                                </a>
                            </div>
                            <div class="panel-mapa" style="position:relative">
                                <div id="objetos-graficos-mapa" style="width:100%;height:100%"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col-xs-4 pull-right">
                        <span aria-hidden="true" aria-controls="button" data-placement="right" title="Guardar" id="btnGrabar" class="fa fa-save fa-2x black boton-deshabilitado"></span>
                        <span aria-hidden="true" aria-controls="button" data-placement="right" title="Cancelar" id="btnCancelar" class="fa fa-undo fa-2x black boton-deshabilitado"></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Error-->
<div class="modal fade theme_new mensaje" id="modalAlertEditor" tabindex="-2" role="dialog" aria-labelledby="TituloAlertEditor" aria-hidden="true" data-backdrop="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-header">
                    <h3 class="modal-title" id="TituloAlertEditor">Titulo</h3>
                    <span aria-hidden="true" class="fa fa-close fa-2x white cursor-pointer pull-right" data-dismiss="modal" aria-label="Cerrar" title="Cerrar"></span>
                </div>
            </div>
            <div class="modal-body">
                <div class="alert alert-danger alert-dismissible" role="alert">
                    <p></p>
                </div>
            </div>
            <div class="modal-footer">
                <div class="col-xs-4 pull-right">
                    <span id="btnAlertAceptar" aria-hidden="true" data-dismiss="modal" title="Aceptar" class="fa fa-check-circle light-blue fa-2x cursor-pointer"></span>
                </div>
            </div>
        </div>
    </div>
</div>


<script src="~/Scripts/jquery.dataTables.min.js"></script>
<script src="~/Scripts/dataTables.bootstrap.js"></script>
<script src="~/Scripts/formValidation.min.js"></script>
<script src="~/Scripts/bootstrapValidation.min.js"></script>
<script src="~/Scripts/select2.min.js"></script>

@RenderSection("Scripts", true)
<script>
    const modal = "#modal-window-editor-grafico";
    let mapa;

    const EditorManager = function ({
        tableColumns,
        get,
        save,
        remove,
        edit,
        reset,
        valid,
        showGeometry,
        writeGeometry,
        getWKT,
        getSelection } = params) {
        let timeout,tablaAPI,mapLoaded,isEditing,mapVisible;
        const enableButtons = (edit) => {
            isEditing = edit;
            const hasSelection = tablaAPI.row(".selected").length != 0;
            const table = $(tablaAPI.rows().nodes()).parents("table").removeAttr("disabled");
            $("#btnAgregarObjeto", modal).removeClass("boton-deshabilitado");
            $("ul.pagination > li", modal).removeClass("boton-deshabilitado");
            $("#btnEditarObjeto,#btnEliminarObjeto,#btnMapa,#btnGrabar,#btnCancelar", modal).addClass("boton-deshabilitado");
            $("#btnAplicarCoords,#btnCopiarCoords", modal).addClass("hidden");
            if (isEditing) {
                $("#btnGrabar,#btnCancelar", modal).removeClass("boton-deshabilitado");
                $("#btnAplicarCoords,#btnCopiarCoords", modal).removeClass("hidden");
                $("#btnAgregarObjeto", modal).addClass("boton-deshabilitado");
                $(table).attr("disabled", "disabled");
                $("ul.pagination > li", modal).addClass("boton-deshabilitado");
            } else if (hasSelection) {
                $("#btnEditarObjeto,#btnEliminarObjeto,#btnMapa", modal).removeClass("boton-deshabilitado");
            }
        };
        const activateEditMode = () => {
            enableButtons(true);
            edit();
        };
        const deactivateEditMode = (undo) => {
            enableButtons(false);
            if (!!undo) {
                reset();
            }
            resetMap(true);
            get(tablaAPI.row(".selected").data())
                .then(empty => {
                    if (!empty && mapVisible) {
                        showGeometry();
                    }
                });
        };
        const rowClick = (evt) => {
            reset();
            resetMap();
            $(evt.currentTarget).toggleClass("selected").siblings().removeClass("selected");
            get(tablaAPI.row(".selected").data())
                .then(empty => {
                    if (!empty && mapVisible) {
                        showGeometry();
                    }
                });
            enableButtons(false);
        };
        const loadMap = (load) => {
            let promise = Promise.resolve();
            if (!mapLoaded && load) {
                promise = new Promise((ok) => setTimeout(() => {
                    mapa = new MapaController(@(Convert.ToInt32(ViewData["IdMapa"])), "objetos-graficos-mapa", true, false, false, false, true,false,false,false,false,@(ViewData["EsLinea"].ToString().ToLower()),@(ViewData["EsPoligono"].ToString().ToLower()));
                    mapLoaded = true;
                    setTimeout(ok, 2000);
                }, 200));
            }
            return promise;
        };
        const toggleMap = (open) => {
            let replaceAlfaSize = "col-xs-12";
            let withAlfaSize = "col-xs-6";
            let replaceModalSize = "modal-lg";
            let withModalSize = "modal-fullwidth";

            $(".map-side", modal).removeClass("hidden");
            if (!open) {
                let aux = replaceAlfaSize;
                replaceAlfaSize = withAlfaSize;
                withAlfaSize = aux;

                aux = replaceModalSize;
                replaceModalSize = withModalSize;
                withModalSize = aux;
                $(".map-side", modal).addClass("hidden");
            }
            mapVisible = open;
            $(".alfa-side", modal).switchClass(replaceAlfaSize, withAlfaSize, 0);
            $(".modal-dialog", modal).switchClass(replaceModalSize, withModalSize, 0, null);
            ajustarScrollBars();
            return loadMap(open);
        };
        const alert = (title, msgs, type) => {
            $("h3", "#modalAlertEditor").html(`${type === "warn" ? "Advertencia -" : type === "error" ? "Error -" : ""} ${title}`.trim());
            $("p", "#modalAlertEditor").html((type === "warn" ? ["Por favor, verifique lo siguiente: "] : []).concat(msgs).join("<br />"));
            $("[role='alert']", "#modalAlertEditor")
                .removeClass("alert-danger alert-success alert-warning")
                .addClass(`alert-${type === "warn" || type === "confirm" ? "warning" : type === "error" ? "danger" : "success"}`);
            $("#btnAlertAceptar", "#modalAlertEditor").off("click");
            $(".modal-footer", "#modalAlertEditor").hide();
            $("#modalAlertEditor").modal("show");
        };
        const viewObject = (_, { edit } = data) => {
            let params = getSelection();
            let showObject = (params) => mapa.seleccionarObjetos(...params);
            if (edit) {
                params = getWKT();
                showObject = (params) => mapa.editarObjeto(params);
            }
            toggleMap(true)
                .then(() => setTimeout(showObject.bind(null,params), mapLoaded ? 100 : 2000));
        }
        const resetMap = (refresh) => {
            if (!mapLoaded) return;
            mapa.limpiar();
            if (refresh) {
                mapa.refrescar();
            }
        }
        $("#grilla-objetos").dataTable({
            language: {
                url: `${BASE_URL}Scripts/dataTables.spanish.txt`
            },
            dom: "tr<'row'<'col-sm-5'i><'col-sm-7'p>>",
            orderCellsTop: true,
            serverSide: true,
            processing: true,
            paging: true,
            pageLength: 10,
            ajax: {
                url: `${BASE_URL}EditorGrafico/@ViewData["DataURL"]`,
                method: 'POST',
                complete: reset
            },
            columns: tableColumns,
            createdRow: (row) => {
                $(row).not("disabled").on('click', rowClick);
            },
            drawCallback: ajustarScrollBars,
            initComplete: function () {
                tablaAPI = this.api();
                tablaAPI.columns.adjust().draw();

                const filterChanged = function (evt) {
                    var col = tablaAPI.column($(evt.target).parents("th").index());
                    if (col.search() !== evt.target.value) {
                        col.search(evt.target.value).draw();
                    }
                };

                $("tr.filtros input[data-filter]", this).on("input change", function (evt) {
                    clearTimeout(timeout);
                    timeout = setTimeout(filterChanged, 500, evt);
                });
                $("tr.filtros select", this).on('change', filterChanged);
                ajustarmodal();
            }
        });
        $("#btnAgregarObjeto", modal).on("click", () => {
            $(tablaAPI.rows().nodes()).removeClass("selected");
            reset();
            activateEditMode();
        });
        $("#btnEditarObjeto", modal).on("click", activateEditMode);
        $("#btnEliminarObjeto", modal).on("click", () => {
            const row = tablaAPI.row(".selected").data();
            if (row) {
                $("#modalAlertEditor").one("show.bs.modal", () => {
                    $(".modal-footer", "#modalAlertEditor").show();
                    $("#btnAlertAceptar", "#modalAlertEditor").one("click", () => {
                        showLoading();
                        remove(row)
                            .then((data) => {
                                alert("Eliminar Registro", [data]);
                                $(tablaAPI.rows().nodes()).removeClass("selected");
                                reset();
                                resetMap(resetMap);
                                tablaAPI.ajax.reload();
                                enableButtons(false);
                            })
                            .catch(error => alert("Eliminar Registro", [error], error === "emptyRow" ? "warn" : "error"))
                            .finally(hideLoading);
                    });
                });
                alert("Confirmar Eliminación", ["¿Está seguro que desea eliminar el registro seleccionado?"], "confirm");
            }
        });

        $("#btnGrabar", modal).on("click", () => {
            if (valid()) {
                showLoading();
                save()
                    .then((data) => {
                        alert("Grabar Registro", [data]);
                        $(tablaAPI.rows().nodes()).removeClass("selected");
                        reset();
                        tablaAPI.ajax.reload();
                        deactivateEditMode();
                    })
                    .catch(error => alert("Grabar Registro", [error], "error"))
                    .finally(hideLoading);
            }
        });
        $("#btnCancelar", modal).on("click", () => {
            deactivateEditMode(true);
        });

        $("#btnMapa", modal).on("click", showGeometry);
        $("#btnCerrarMapa", modal).on("click", toggleMap.bind(null, false));
        $("#btnAplicarCoords", modal).on("click", () => {
            writeGeometry(mapa.obtenerDibujos()[0]);
        });
        $("#btnCopiarCoords", modal).on("click", () => {
            mapa.dibujarSeleccion(0);
        });
        $(modal).on("showGeometry", viewObject);
    };
    const ajustarmodal = function () {
        const altura = $(window).height() - 60,
            alturaContenedor = altura - 90;

        $(".modal-content", modal).css({ "max-height": altura, "overflow": "hidden" });
        $(".modal-dialog", modal).css({ "max-height": altura });
        $(".modal-body, .body-content, .alfa-side", modal).css({ "max-height": alturaContenedor, "height": alturaContenedor });
        $(".alfa-side > div", modal).css({ "min-height": alturaContenedor - 15 });
        $(".panel-mapa", modal).css({ "height": alturaContenedor - 66 });
        ajustarScrollBars();
    };
    const ajustarScrollBars = function () {
        $(".alfa-side > div", modal).getNiceScroll().resize();
        $(".alfa-side > div", modal).getNiceScroll().show();
        console.info("ajustarScrollBars");
    };
    const init = function () {
        $(".alfa-side > div", modal).niceScroll(getNiceScrollConfig());
        ajustarmodal();
        const manager = new EditorManager(new ObjetoManager(modal));
        $(modal).one('shown.bs.modal', function () {
            hideLoading();
        }).one('hidden.bs.modal', function () {
            delete manager;
            delete EditorGraficoConfigurator;
        }).modal("show");
    };
    $(document).ready(init);
    $(window).resize(ajustarmodal);
</script>