@model GeoSit.Client.Web.Models.Search.SearchResultModel
@{
    int totalItems = 0;
    Model.Groups.ForEach(g => totalItems += g.Cantidad);
}
<div class="row">
    <div class="container-arrow"></div>
    <div id="message" class="">
        @Html.Raw(string.Format("Se ha{0} encontrado{1} {2} registro{1}{3}",
                       (totalItems == 1 ? "" : "n"),
                       (totalItems == 1 ? "" : "s"),
                       totalItems,
                       string.IsNullOrWhiteSpace(Model.Pattern) ? string.Empty : " con <i><b>" + Model.Pattern + "</b></i>"))
        <a class="reset-search-btn" title="Cerrar / Realizar nueva busqueda" href="#" data-placement="right">
            <i class="fa fa-times-circle"></i>
        </a>
    </div>
    <div id="accordion" class="results">
        @foreach (var grupo in Model.Groups)
        {
            <div class='panel-heading bg-primary' role='tab' id='@string.Format("heading{0}", grupo.Nombre.ToLower())'>
                <a data-toggle='collapse' data-parent='#accordion' href='@string.Format("#collapse{0}", grupo.Nombre.ToLower())' aria-expanded='true'
                   aria-controls='@string.Format("collapse{0}", grupo.Nombre.ToLower())'>
                    <div class='panel-title'>
                        @grupo.Nombre
                        <span class='badge' title='@string.Format("{0} registro{1}", grupo.Cantidad, grupo.Cantidad == 1 ? string.Empty : "s")'>@grupo.Cantidad</span>
                        <i class="fa"></i>
                    </div>
                </a>
            </div>
            <div id='@string.Format("collapse{0}", grupo.Nombre.ToLower())' class='panel-collapse collapse in'
                 role='tabpanel' aria-labelledby='@string.Format("heading{0}", grupo.Nombre.ToLower())'>
                <div class="panel-body">
                    @switch (grupo.Nombre.ToLower())
                    {
                        case "departamentos":
                            Html.RenderPartial("TipoResultados/DepartamentosResult", grupo);
                            break;
                        case "pedanias":
                            Html.RenderPartial("TipoResultados/PedaniasResult", grupo);
                            break;
                        case "localidades":
                            Html.RenderPartial("TipoResultados/LocalidadesResult", grupo);
                            break;
                        case "circunscripciones":
                            Html.RenderPartial("TipoResultados/CircunscripcionesResult", grupo);
                            break;
                        case "secciones":
                            Html.RenderPartial("TipoResultados/SeccionesResult", grupo);
                            break;
                        case "manzanas":
                            Html.RenderPartial("TipoResultados/ManzanasResult", grupo);
                            break;
                        case "parcelas":
                            Html.RenderPartial("TipoResultados/ParcelasResult", grupo);
                            break;
                        case "cuentas":
                            Html.RenderPartial("TipoResultados/CuentasResult", grupo);
                            break;
                        default:
                            break;
                    }
                </div>
            </div>
        }
    </div>
</div>